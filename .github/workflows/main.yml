# .github/workflows/ci-cd-pipeline.yml
name: CI/CD Pipeline

on:
  push:
    branches:
      - main
      - 'env/staging'

permissions:
  packages: write

jobs:
  secret-scan:
    name: Secret Scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Scan for secrets with Gitleaks
        uses: gitleaks/gitleaks-action@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build-and-push:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    needs: secret-scan
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to GitHub Packages
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags:
            ghcr.io/${{ github.repository }}:${{ github.run_number }}

  test:
    name: Run Unit and Integration Tests
    runs-on: ubuntu-latest
    needs: build-and-push
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: pip install -r requirements.txt

      - name: Run Unit Tests
        run: echo "pytest tests/unit"

      - name: Run Integration Tests
        run: echo "pytest tests/integration"

  deploy:
    name: Deploy to Minikube
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

#      - name: Set up Minikube
#        uses: manusa/actions-setup-minikube@v2
#        with:
#          minikube-version: 'v1.31.1'
#          driver: docker

      - name: start minikube
        id: minikube
        uses: medyagh/setup-minikube@latest

#      - name: Log in to Minikube Docker registry
#        run: |
#          minikube docker-env
#          eval $(minikube -p minikube docker-env)

#      - name: Pull Docker image from GitHub Packages
#        run: |
#          docker pull ghcr.io/${{ github.repository }}:${{ github.ref_name }}
#          docker tag ghcr.io/${{ github.repository }}:${{ github.ref_name }} my-app:latest

      - name: Deploy to Minikube
        env:
          POSTGRES_USER: ${{ vars.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
          POSTGRES_DB: ${{ vars.POSTGRES_DB }}
          DB_HOST: ${{ vars.DB_HOST }}
          APP_IMAGE: ghcr.io/${{ github.repository }}:${{ github.run_number }}

        run: |
          kubectl apply -f k8s/namespace.yaml
          kubectl apply -f k8s/configmap.yaml
          kubectl apply -f k8s/pv-pvc.yaml
          kubectl apply -f k8s/postgres-deployment.yaml
          kubectl apply -f k8s/postgres-service.yaml
          kubectl run coffee-app --image=$APP_IMAGE --port=8000 -n coffee-app -l app=coffee-app
          kubectl apply -f k8s/fastapi-service.yaml

      - name: Verify deployment
        run: |
          kubectl get pods -A
          kubectl wait --for=condition=Ready pod/coffee-app -n coffee-app

      - name: Check service via curl
        run: |
          minikube service coffee-app-service --url -n coffee-app
          URL=$(minikube service coffee-app-service --url -n coffee-app)
          curl $URL
